# -*- Mode: Makefile; tab-width: 4; indent-tabs-mode: t -*-
#-------------------------------------------------------------------------------
# ArrayMath - an array math library
#-------------------------------------------------------------------------------
# Copyright(c) 2013 Marcus Geelnard
#
# This software is provided 'as-is', without any express or implied warranty.
# In no event will the authors be held liable for any damages arising from the
# use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not claim
#    that you wrote the original software. If you use this software in a
#    product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
#
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
#
# 3. This notice may not be removed or altered from any source distribution.
#-------------------------------------------------------------------------------

.PHONY: all clean

# C compiler settings
CC = arm-linux-gnueabi-gcc
CFLAGS = --std=c99 -c -O3 -ffast-math -W -Wall -Wextra -pedantic -I. -Ikiss_fft

# C++ compiler settings
CPP = arm-linux-gnueabi-g++
CPPFLAGS = -c -O3 -ffast-math -W -Wall -Wextra -pedantic -I. -Ikiss_fft
RM = rm -rf

# Automatically generate dependency files
CFLAGS += -MMD -MP
CPPFLAGS += -MMD -MP

# ARM SIMD activation
CPPFLAGS += -DAM_HAS_NEON -DAM_USE_KISS_FFT
CPPFLAGS_NEON = $(CPPFLAGS) -mfloat-abi=softfp -mfpu=neon

OUTDIR = out

# FFT objects
FFT_OBJS = $(OUTDIR)/kiss_fft.o \
           $(OUTDIR)/kiss_fftr.o \
           $(OUTDIR)/FFTKiss.o

# Core ArrayMath objects
OBJS = $(OUTDIR)/ArrayMath.o \
       $(OUTDIR)/ArrayMathARM.o \
       $(OUTDIR)/ArrayMathGeneric.o \
       $(OUTDIR)/ArrayMathNEON.o \
       $(OUTDIR)/CPUFeatureDetector.o \
       $(OUTDIR)/FilterFactory.o \
       $(OUTDIR)/FilterGeneric.o \
       $(OUTDIR)/FFTFactory.o \
       $(OUTDIR)/RandomGeneric.o \
       $(OUTDIR)/RandomNEON.o \
       $(FFT_OBJS)

all: $(OUTDIR)/Benchmark $(OUTDIR)/Test

clean:
	$(RM) $(OBJS) $(OBJS:.o=.d) $(OUTDIR)/Test.d $(OUTDIR)/Test.o $(OUTDIR)/Test $(OUTDIR)/Benchmark.d $(OUTDIR)/Benchmark.o $(OUTDIR)/Benchmark

$(OUTDIR)/Benchmark: $(OBJS) $(OUTDIR)/Benchmark.o
	$(CPP) -o $@ $^

$(OUTDIR)/Test: $(OBJS) $(OUTDIR)/Test.o
	$(CPP) -o $@ $^

$(OUTDIR)/%.o: %.cpp
	$(CPP) $(CPPFLAGS) -o $@ $<

$(OUTDIR)/%.o: common/%.cpp
	$(CPP) $(CPPFLAGS) -o $@ $<

$(OUTDIR)/%.o: generic/%.cpp
	$(CPP) $(CPPFLAGS) -o $@ $<

$(OUTDIR)/ArrayMathARM.o: arm/ArrayMathARM.cpp
	$(CPP) $(CPPFLAGS) -o $@ $<

$(OUTDIR)/ArrayMathNEON.o: arm/ArrayMathNEON.cpp
	$(CPP) $(CPPFLAGS_NEON) -o $@ $<

$(OUTDIR)/RandomNEON.o: arm/RandomNEON.cpp
	$(CPP) $(CPPFLAGS_NEON) -o $@ $<

$(OUTDIR)/%.o: test/%.cpp
	$(CPP) $(CPPFLAGS) -o $@ $<

# Kiss FFT compilation rules
$(OUTDIR)/%.o: kiss_fft/%.c
	$(CC) $(CFLAGS) -o $@ $<

$(OUTDIR)/%.o: kiss_fft/tools/%.c
	$(CC) $(CFLAGS) -o $@ $<


# These dependency files are generated automatically when building the object
# files.
-include $(OBJS:.o=.d)

